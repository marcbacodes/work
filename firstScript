function onOpen() {
  
  var ui=SpreadsheetApp.getUi();
  ui.createMenu('Send reminder') // creating a menu in the spreadsheet
  .addItem('Send','getEmailInfo') // add the function sendReminder to the menu
  .addToUi();
}

function getEmailInfo(){

var currentSheetTab=SpreadsheetApp.getActiveSpreadsheet().getSheets()[0];//Main tab in the Assignment Hub 
var sheetRange=currentSheetTab.getDataRange();
var sheetValues=sheetRange.getValues();//This creates an array of the values in the data range
var lastRow=sheetRange.getLastRow() - 1;
   
for (var i=1; i<=lastRow;i++){

var correctionStatus=currentSheetTab.getRange(i+1,33);
var URLbase="https://docs.google.com/spreadsheets/d/";
var fileID=currentSheetTab.getRange(i+1,14).getValue();
var profileURL=URLbase + fileID;
var entityName=currentSheetTab.getRange(i+1,3).getValue();

if (correctionStatus.getValue()=="") {
        
        var email="";
        var RAName=currentSheetTab.getRange(i+1,2).getValue();
        var subject="Pending QAs";
        var message="You have QAs pending, please complete them when you have a moment: " + entityName + " " + profileURL;
        var messageStatus="Email OK";

        switch (RAName){
    case "Lv, Flora":
      email="danqing.lv@dowjones.com";
      break;
    case "Garcia-Bragado, Oscar":
        email="oscar.garcia-bragadogarzo@dowjones.com";
        break;
    case "Soerensen, Mona":
      email="mona.soerensen@dowjones.com";
      break;
    case "Zhu, Cherry":
      email="jiayao.zhu@dowjones.com";
      break;
    case "Shinoda, Atsuko":
      email="atsuko.shinoda@dowjones.com";
      break;
    case "Lin, Stephanie":
      email="stephanie.lin@dowjones.com";
      break;
    case "Wang, Ruoying":
      email="ruoying.wang@dowjones.com";
      break;
    case "Faustino, Sofia":
      email="sofia.faustino@dowjones.com";
      break;
    case "Sauer, Natalie":
      email="natalie.sauer@dowjones.com";
      break;
    case "Ramirez, Natalia":
      email="natalia.ramirez@dowjones.com";
      break;
    case "Cachau, Matthieu":
      email="Matthieu.Cachau@dowjones.com";
      break;
    case "Smatanova, Maria":
      email="maria.smatanova@dowjones.com";
      break;
    case "Lamuedra, Maria":
      email="maria.lamuedragarijo@dowjones.com";
      break;
    case "Guo, Ivy":
      email="ivy.guo@dowjones.com";
      break;
    case "Meraldi, Federica":
      email="federica.meraldi@dowjones.com";
      break;
    case "Jiang, Fengwei":
      email="fengwei.jiang@dowjones.com";
      break;
    case "Cerron, Sergio":
      email="sergio.cerron@dowjones.com";
      break;   
    case "Cuttica, Florencia":
      email="florencia.cuttica@dowjones.com";
      break;  
    case "Daryanani, Vibha":
      email="Vibha.Daryanani@dowjones.com";
      break;  
    case "Haley, Michael":
      email="michael.haley@dowjones.com";
      break;  
    case "Metzler, Antoni":
      email="kacper.metzler@dowjones.com";
      break; 
    case "Bisbal Arias, Marc":
      email="marc.bisbalarias@dowjones.com";
      break;
    case "Amaral Rohter, Sonia":
      email="sonia.amaralrohter@dowjones.com";
      break;
    case "Cohen, Jonathan":
      email="jonathan.cohen@dowjones.com";
      break;
    case "Castia, Matteo":
      email="matteo.castia@dowjones.com";     
      break;
    case "Zhang, Adela":
      email="adela.zhang@dowjones.com";
      break;
    case "Xu, Yayi":
      email="yayi.xu@dowjones.com";
      break
    default:
      email="marc.bisbalarias@dowjones.com";
      subject="Invalid email";
      message="A valid email couldn't be found to send this QA: " + entityName + " " + profileURL;
      messageStatus="Invalid email";
      break;   
};        
        sendReminder(currentSheetTab,email,subject,message);
        currentSheetTab.getRange(i+1,39).setValue(messageStatus);
        
} else if (correctionStatus.getValue()!="" && correctionStatus.getValue()!="Done" && correctionStatus.getValue()!="Pending"){

        var errorEmail="marc.bisbalarias@dowjones.com";
        var errorSubject="Invalid correction status";
        var errorMessage="There was an error sending this QA: " + entityName + " " + profileURL;
        var errorMessageStatus="Invalid correction status";
        sendWrongEmail(currentSheetTab,errorEmail,errorSubject,errorMessage);
        currentSheetTab.getRange(i+1,39).setValue(errorMessageStatus);
}
}};

function sendReminder(currentSheetTab,email,subject,message){
MailApp.sendEmail(email,subject,message);
};

function sendWrongEmail(currentSheetTab,errorEmail,errorSubject,errorMessage){      
MailApp.sendEmail(errorEmail,errorSubject,errorMessage);
};
